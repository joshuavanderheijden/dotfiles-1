###
### Change the default prefix key for Tmux
###
# Screen like binding (remap prefix to Control + a)
set -g prefix C-a
unbind C-b
bind C-a send-prefix

###
### Change the default shell
###
set-option -g default-command /bin/zsh
set-option -g default-shell /bin/zsh

###
### Enable ctrl-left + ctrl-right word movement
###
# http://sigizmund.com/tmux-and-c-leftc-right/
set-window-option -g xterm-keys on

# Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal "screen-256color"

###
### Window Shortcuts
###
bind C-p previous-window
bind C-n next-window

# Shortcuts to kill a window
bind ^k confirm kill-window

###
### Pane switch shortcuts
###
# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind -r h resize-pane -L 1
bind -r j resize-pane -D 1
bind -r k resize-pane -U 1
bind -r l resize-pane -R 1

# Smart pane switching with awareness of vim splits.
# Source: https://github.com/christoomey/vim-tmux-navigator
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
#bind e setw synchronize-panes on
#bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1
set -g renumber-windows on

# Quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# No escape time for vi mode
set -sg escape-time 0

# Screen like binding for last window
unbind l
bind C-a last-window

# Bigger history
set -g history-limit 10000

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

###
### Window layout shortcuts, allows for quickly opening a pre-defined window layout
###
# Dotfiles editing
bind-key M-. new-window -n ".dotfiles" -c "$HOME/.dotfiles" \; \
    send-keys 'vim' 'Enter' \; \
    send-keys ':UpdateTags -R ./' 'Enter' \; \
    split-window -h -p 30 -c '#{pane_current_path}' \; \
    select-pane -t :.1

# Dotfiles editing
bind-key M-d new-window -n "development" \; \
    send-keys 'vim' 'Enter' \; \
    split-window -h -p 30 -c '#{pane_current_path}' \; \
    select-pane -t :.1

###
### Set default tmux theme
### Source: https://gist.github.com/gchiam/4606522f513cc64b79ce
###
# This tmux statusbar config was created based on gruvbox colorscheme

set -g status "on"
set -g status-justify "centre"
set -g status-left-length "100"
set -g status-right-length "100"
set -g status-right-attr "none"
set -g status-attr "none"
set -g status-utf8 "on"
set -g status-left-attr "none"
set -g pane-border-fg "colour238"
#set -g pane-border-bg "black"
#set -g pane-active-border-fg "colour248"
set -g pane-active-border-fg "colour109"
set -g pane-active-border-bg "colour109"
#set -g pane-active-border-fg "colour66"
#set -g pane-active-border-bg "colour66"
#set -g pane-active-border-bg "colour248"
set -g status-bg "colour237"
set -g message-fg "colour237"
set -g message-bg "colour109"
set -g message-command-fg "colour237"
set -g message-command-bg "colour248"
setw -g window-status-fg "colour223"
setw -g window-status-bg "colour239"
setw -g window-status-current-fg "colour237"
setw -g window-status-current-bg "colour109"
setw -g window-status-attr "none"
setw -g window-status-activity-bg "colour237"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-fg "colour248"
setw -g window-status-separator ""

set -g status-left '#{?client_prefix,#[fg=colour16]#[bg=colour109],#[fg=colour16]#[bg=colour248]}#[bold] #S #[nobold]#{?client_prefix,#[fg=colour109]#[bg=colour237],#[fg=colour248]#[bg=colour237]} '
set -g status-right "#[fg=colour239,bg=colour237]#[fg=colour246,bg=colour239] %Y-%m-%d  %H:%M #[fg=colour248,bg=colour239]#[fg=colour237,bg=colour248] #h "
setw -g window-status-format "#[fg=colour237,bg=colour239]#[fg=colour223] #I#{window_flags}  #W #[fg=colour239,bg=colour237]"
setw -g window-status-current-format " #I#{window_flags}  #[bold]#W#[nobold] #[fg=colour109,bg=colour237]"

###
### Load version specific config files
###
#if-shell "[[ `tmux -V | cut -d ' ' -f2 | sed 's/[a\.]//g'` -ge 19 ]]" 'source $DOTFILES/tmux/tmux_ge_19.conf' 'source $DOTFILES/tmux/tmux_lt_19.conf'
#if-shell "[[ `tmux -V | cut -d ' ' -f2 | sed 's/[a\.]//g'` -ge 21 ]]" 'source $DOTFILES/tmux/tmux_ge_21.conf' 'source $DOTFILES/tmux/tmux_lt_21.conf'
run-shell "bash $DOTFILES/tmux/load-correct-tmux-versions.sh"

###
### Local config
###
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'


