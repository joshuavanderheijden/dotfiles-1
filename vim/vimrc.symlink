""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Plugin Manager (vim-plug)
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"""
""" Auto-install vim-plug
"""
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall
endif

call plug#begin('~/.vim/plugged')

"""
""" Colorschemes: Additional colorschemes that can be used
"""
Plug 'morhetz/gruvbox'
Plug 'romainl/flattened'
Plug 'romainl/apprentice'

"""
""" Syntax: Additional syntaxes that can be used
"""
Plug 'tpope/vim-git', { 'for': 'git' }
Plug 'cakebaker/scss-syntax.vim', { 'for': 'scss' }

"""
""" FZF Vim: Fuzzy file openener vim extension
"""
Plug 'junegunn/fzf', {'dir': '~/.fzf', 'frozen': 1}
Plug 'junegunn/fzf.vim'

"""
""" Tmux: Loads the vim-tmux-navigator to allow tmux keyboard shortcuts to be used within vim
"""
Plug 'christoomey/vim-tmux-navigator'

"""
""" Git: Plugins for git usage
""'
" Fugitive: Git from within Vim
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'

"""
""" Bbye: Buffer Bye for Vim - Allows closing buffers without screwing up the window layout
"""
Plug 'moll/vim-bbye', {'on': 'Bdelete'}

"""
""" surround.vim: quoting/parenthesizing made simple
"""
Plug 'tpope/vim-surround'

"""
""" repeat.vim: Enable repeating supported plugin maps with "."
"""
Plug 'tpope/vim-repeat'

"""
""" unimpaired.vim: Pair mapping for vim lists
"""
Plug 'tpope/vim-unimpaired'

"""
""" vim-cool: Disable hlsearch when you are done searching
"""
Plug 'romainl/vim-cool'

"""
""" ReplaceWithRegister: Replace text with the contents of a register
"""
Plug 'vim-scripts/ReplaceWithRegister'

"""
""" vim-argwrap: Wrap and unwrap function arguments, lists and dictionaries
"""
Plug 'FooSoft/vim-argwrap'

"""
""" ===== Programming Plugins =====
"""

"""
""" vim-commentary: Commenting plugins
"""
Plug 'tpope/vim-commentary'

"""
""" Auto Pairs: Provides automatic matching brackets / quotes
"""
Plug 'jiangmiao/auto-pairs'

call plug#end()

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Load minimal vimrc file for common settings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

if !empty($DOTFILES)
    let s:vimrc_root = $DOTFILES
else
    let s:vimrc_root = expand(expand('<sfile>:p:h') . "/.dotfiles")
endif
exec "source " . expand(s:vimrc_root . "/vim/vimrc.minimal")

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Plugin Setup
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"""
""" FZF Integration
"""
" {{{
nnoremap <c-p> :FZF -m<cr>

function! s:find_git_root()
    return system('git rev-parse --show-toplevel 2> /dev/null')[:-2]
endfunction

command! GitRootFiles execute 'Files' s:find_git_root()
command! LocalFiles execute 'Files' expand('%:h')

nnoremap <silent> <leader>b :Buffers<cr>
nnoremap <silent> <leader>G :GitFiles<cr>
nnoremap <silent> <leader>f :Files<cr>
nnoremap <silent> <leader>F :LocalFiles<cr>
nnoremap <silent> <leader>t :Tags<cr>
nnoremap <silent> <leader>/ :execute 'Ag ' . input('Ag/')<cr>
"nnoremap <silent> <leader>g :GitRootFiles<cr>
"nnoremap <silent> <leader>? :History<cr>
"nnoremap <silent> <leader>m :Marks<cr>
"nnoremap <silent> <leader>. :AgIn 

nnoremap <silent> K :call SearchWordWithAg()<cr>
vnoremap <silent> K :call SearchVisualSelectionWithAg()<cr>

function! SearchWordWithAg()
    execute 'Ag' expand('<cword>')
endfunction

function! SearchVisualSelectionWithAg() range
    let old_reg = getreg('"')
    let old_regtype = getregtype('"')
    let old_clipboard = &clipboard
    set clipboard&
    normal! ""gvy
    let selection = getreg('"')
    call setreg('"', old_reg, old_regtype)
    let &clipboard = old_clipboard
    execute 'Ag' selection
endfunction

function! SearchWithAgInDirectory(...)
    call fzf#vim#ag(join(a:000[1:], ' '), extend({'dir': a:1}, g:fzf#vim#default_layout))
endfunction
command! -nargs=+ -complete=dir AgIn call SearchWithAgInDirectory(<f-args>)


" }}}

"""
""" Bbye: Buffer Bye for Vim configuration
"""
" {{{

" Close the current buffer
cabbrev bd Bdelete
nnoremap <leader>c :Bdelete<cr>

" }}}

"""
""" vim-surround
"""
" {{{

" Allow the usage of * as a surround character for multiline C-style comments
let g:surround_{char2nr("*")} = "/* \r */"

" }}}

"""
""" Git-Gutter
"""
" {{{

let g:gitgutter_map_keys = 0

" }}}

